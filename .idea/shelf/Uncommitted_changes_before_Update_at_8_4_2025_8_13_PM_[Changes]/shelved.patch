Index: app/models/user.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from typing import Optional, List\r\nfrom uuid import UUID, uuid4\r\nfrom pydantic import EmailStr\r\nfrom sqlalchemy.orm import validates\r\nfrom sqlmodel import SQLModel, Field, Relationship\r\nfrom datetime import datetime, timezone\r\nfrom app.models.user_role import UserRole\r\nfrom sqlalchemy import Column, DateTime, String, ForeignKey\r\nfrom sqlalchemy.dialects.postgresql import UUID as SqlAlchemyUUID\r\n\r\nclass User(SQLModel, table=True):\r\n    __tablename__ = \"user\"\r\n    id: UUID = Field(default_factory=uuid4, primary_key=True, index=True)\r\n    email: EmailStr = Field(\r\n        sa_column=Column(String, unique=True, index=True, nullable=False)\r\n    )\r\n    hashed_password: str\r\n    full_name: Optional[str] = None\r\n    role: UserRole = Field(default=UserRole.admin, index=True)\r\n    is_active: bool = Field(default=True, index=True)\r\n    created_at: datetime = Field(\r\n        default_factory=lambda: datetime.now(timezone.utc),\r\n        sa_column=Column(DateTime(timezone=True))\r\n    )\r\n    updated_at: datetime = Field(\r\n        default_factory=lambda: datetime.now(timezone.utc),\r\n        sa_column=Column(DateTime(timezone=True))\r\n    )\r\n    last_login: Optional[datetime] = Field(\r\n        default=None,\r\n        sa_column=Column(DateTime(timezone=True))\r\n    )\r\n    user_pic: Optional[str] = Field(\r\n        default=None,\r\n        sa_column=Column(String,unique=True, nullable=True)\r\n    )\r\n\r\n    # Self-referential relationship for tracking who created whom\r\n    created_by_id: Optional[UUID] = Field(\r\n        default=None,\r\n        sa_column=Column(SqlAlchemyUUID(as_uuid=True), ForeignKey(\"user.id\", ondelete=\"SET NULL\"))\r\n    )\r\n    created_by: Optional[\"User\"] = Relationship(\r\n        back_populates=\"users_created\",\r\n        sa_relationship_kwargs={\"remote_side\": \"User.id\"}\r\n    )\r\n    users_created: List[\"User\"] = Relationship(\r\n        back_populates=\"created_by\",\r\n    )\r\n\r\n    @validates(\"email\")\r\n    def normalize_email(self, _, address):\r\n        return str(address).lower()
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/models/user.py b/app/models/user.py
--- a/app/models/user.py	(revision ae1b084d8b5e5ce750c81d5355e63264956ecd05)
+++ b/app/models/user.py	(date 1754320468872)
@@ -1,8 +1,8 @@
 from typing import Optional, List
 from uuid import UUID, uuid4
 from pydantic import EmailStr
-from sqlalchemy.orm import validates
-from sqlmodel import SQLModel, Field, Relationship
+from sqlalchemy.orm import validates, Relationship
+from sqlmodel import SQLModel, Field
 from datetime import datetime, timezone
 from app.models.user_role import UserRole
 from sqlalchemy import Column, DateTime, String, ForeignKey
@@ -42,7 +42,6 @@
     )
     created_by: Optional["User"] = Relationship(
         back_populates="users_created",
-        sa_relationship_kwargs={"remote_side": "User.id"}
     )
     users_created: List["User"] = Relationship(
         back_populates="created_by",
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"1a47017e-a63f-4f54-877a-a9a67d09916d\" name=\"Changes\" comment=\"tt\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/api/routes/users.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/api/routes/users.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/schemas/user.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/schemas/user.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;Darawshi&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/Darawshi/FastAPI-CMS.git&quot;,\r\n    &quot;accountId&quot;: &quot;3f435d10-3195-40ac-80d2-55df9ecd3565&quot;\r\n  }\r\n}</component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 7\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"30HEFE0fcca1vGgPKml42CfETfu\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;Python.main.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.TerminalTabsStorage.copyFrom.TerminalArrangementManager&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Bassam\\PycharmProjects\\FastAPI-CMS\" />\r\n      <recent name=\"C:\\Users\\USER-Q\\Desktop\\FastAPI-CMS\\FastAPI-CMS\\app\\api\\routes\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"FastAPI-CMS\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-09060db00ec0-JavaScript-PY-251.26927.90\" />\r\n        <option value=\"bundled-python-sdk-41e8cd69c857-64d779b69b7a-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-251.26927.90\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"1a47017e-a63f-4f54-877a-a9a67d09916d\" name=\"Changes\" comment=\"\" />\r\n      <created>1753275991792</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1753275991792</updated>\r\n      <workItem from=\"1753276000603\" duration=\"437000\" />\r\n      <workItem from=\"1753276461463\" duration=\"2996000\" />\r\n      <workItem from=\"1753331701373\" duration=\"3427000\" />\r\n      <workItem from=\"1753452860107\" duration=\"4312000\" />\r\n      <workItem from=\"1753506468441\" duration=\"703000\" />\r\n      <workItem from=\"1753511058848\" duration=\"1247000\" />\r\n      <workItem from=\"1753512644780\" duration=\"874000\" />\r\n      <workItem from=\"1753516396301\" duration=\"5333000\" />\r\n      <workItem from=\"1753522130865\" duration=\"2830000\" />\r\n      <workItem from=\"1753552117306\" duration=\"793000\" />\r\n      <workItem from=\"1753552950440\" duration=\"53000\" />\r\n      <workItem from=\"1753553116434\" duration=\"198000\" />\r\n      <workItem from=\"1753593295367\" duration=\"3000\" />\r\n      <workItem from=\"1753597898254\" duration=\"4175000\" />\r\n      <workItem from=\"1753602238267\" duration=\"638000\" />\r\n      <workItem from=\"1753603377174\" duration=\"7481000\" />\r\n      <workItem from=\"1753602204426\" duration=\"4506000\" />\r\n      <workItem from=\"1753685805739\" duration=\"16274000\" />\r\n      <workItem from=\"1753703731024\" duration=\"3046000\" />\r\n      <workItem from=\"1753706827686\" duration=\"173000\" />\r\n      <workItem from=\"1753707083152\" duration=\"1466000\" />\r\n      <workItem from=\"1753727276118\" duration=\"5638000\" />\r\n      <workItem from=\"1753738224145\" duration=\"4629000\" />\r\n      <workItem from=\"1753743312600\" duration=\"160000\" />\r\n      <workItem from=\"1753774521462\" duration=\"6233000\" />\r\n      <workItem from=\"1753784363904\" duration=\"2853000\" />\r\n      <workItem from=\"1753787372112\" duration=\"214000\" />\r\n      <workItem from=\"1753821265375\" duration=\"3369000\" />\r\n      <workItem from=\"1753954604183\" duration=\"13693000\" />\r\n      <workItem from=\"1754175564762\" duration=\"20000\" />\r\n      <workItem from=\"1754248658811\" duration=\"3674000\" />\r\n      <workItem from=\"1754252390097\" duration=\"367000\" />\r\n      <workItem from=\"1754257345083\" duration=\"7445000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"asdf\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1753282617386</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1753282617386</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"asdf\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1753282744282</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1753282744282</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"asdf\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1753331722520</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1753331722520</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"asdf\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1753334959763</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1753334959763</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"5\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1753513418844</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1753513418844</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"5\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1753520140926</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1753520140926</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"amin\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1753729145803</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1753729145803</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"final\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1753823701990</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1753823701990</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"final\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1753824545228</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1753824545228</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"before image\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1753958350429</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1753958350429</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"tt\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1754213661770</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1754213661770</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"tt\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1754252748747</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1754252748747</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"tt\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1754262325026</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1754262325026</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"14\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"asdf\" />\r\n    <MESSAGE value=\"5\" />\r\n    <MESSAGE value=\"amin\" />\r\n    <MESSAGE value=\"final\" />\r\n    <MESSAGE value=\"before image\" />\r\n    <MESSAGE value=\"tt\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"tt\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/FastAPI_CMS$main.coverage\" NAME=\"main Coverage Results\" MODIFIED=\"1753519631389\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision ae1b084d8b5e5ce750c81d5355e63264956ecd05)
+++ b/.idea/workspace.xml	(date 1754327577462)
@@ -7,6 +7,7 @@
     <list default="true" id="1a47017e-a63f-4f54-877a-a9a67d09916d" name="Changes" comment="tt">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/app/api/routes/users.py" beforeDir="false" afterPath="$PROJECT_DIR$/app/api/routes/users.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/models/user.py" beforeDir="false" afterPath="$PROJECT_DIR$/app/models/user.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/app/schemas/user.py" beforeDir="false" afterPath="$PROJECT_DIR$/app/schemas/user.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -147,7 +148,10 @@
       <workItem from="1754175564762" duration="20000" />
       <workItem from="1754248658811" duration="3674000" />
       <workItem from="1754252390097" duration="367000" />
-      <workItem from="1754257345083" duration="7445000" />
+      <workItem from="1754257345083" duration="7878000" />
+      <workItem from="1754267192573" duration="1536000" />
+      <workItem from="1754318757533" duration="1314000" />
+      <workItem from="1754317991882" duration="165000" />
     </task>
     <task id="LOCAL-00001" summary="asdf">
       <option name="closed" value="true" />
@@ -253,7 +257,15 @@
       <option name="project" value="LOCAL" />
       <updated>1754262325026</updated>
     </task>
-    <option name="localTasksCounter" value="14" />
+    <task id="LOCAL-00014" summary="tt">
+      <option name="closed" value="true" />
+      <created>1754265004096</created>
+      <option name="number" value="00014" />
+      <option name="presentableId" value="LOCAL-00014" />
+      <option name="project" value="LOCAL" />
+      <updated>1754265004096</updated>
+    </task>
+    <option name="localTasksCounter" value="15" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
Index: app/api/routes/users.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># app/api/routes/users.py\r\nfrom fastapi import APIRouter, Depends, Query, status, UploadFile, File\r\nfrom typing import List, Optional\r\nfrom sqlalchemy.ext.asyncio import AsyncSession\r\nfrom uuid import UUID\r\nfrom app.crud.user import create_user, delete_user_by_id, get_users, update_user_by_id, \\\r\n    deactivate_user_by_id, reactivate_user_by_id, get_user_by_id, update_own_user\r\nfrom app.models.user import User\r\nfrom app.schemas import user\r\nfrom app.schemas.user import UserRead, UserUpdate, UserCreate, UserUpdateOwn\r\nfrom app.core.dependencies import get_current_user, get_session\r\nfrom app.models.user_role import UserRole\r\nfrom app.services.image_service import  process_user_profile_image_upload\r\nfrom app.services.permissions import validate_user_creation_permissions, filter_users_by_role_viewer, \\\r\n    validate_user_update_permissions, validate_user_deactivate_reactivate, require_admin_or_senior_editor, \\\r\n    require_admin, prevent_self_action, require_admin_or_senior_editor_or_editor\r\n\r\nrouter = APIRouter()\r\n\r\n\r\n@router.get(\"/me\", response_model=UserRead ,name=\"Profile\")\r\nasync def read_own_profile(\r\n    current_user: User = Depends(get_current_user),\r\n):\r\n    return current_user\r\n\r\n@router.patch(\"/me/update\", response_model=UserRead,name=\"Update My Profile\")\r\nasync def update_own_profile(\r\n    user_update: UserUpdateOwn,\r\n    session: AsyncSession = Depends(get_session),\r\n    current_user: User = Depends(get_current_user),\r\n):\r\n    return await update_own_user(session, current_user, user_update)\r\n\r\n@router.post(\"/me/upload-pic\")\r\nasync def upload_user_pic(\r\n    file: UploadFile = File(...),\r\n    current_user: User = Depends(get_current_user),\r\n    session: AsyncSession = Depends(get_session),\r\n):\r\n    filename = await process_user_profile_image_upload(file, current_user, session)\r\n    return {\"filename\": filename}\r\n\r\n\r\n@router.get(\"/all\", response_model=List[UserRead],name=\"Admin/senior_editor List Users\")\r\nasync def list_users(\r\n    offset: int = Query(0, ge=0),\r\n    limit: int = Query(10, ge=1, le=100),\r\n    role: Optional[UserRole] = None,\r\n    is_active: Optional[bool] = None,\r\n    session: AsyncSession = Depends(get_session),\r\n    current_user: User = Depends(require_admin_or_senior_editor),\r\n):\r\n    users = await get_users(session, offset, limit, role, is_active)\r\n    users = filter_users_by_role_viewer(current_user, users)\r\n    return users\r\n\r\n@router.patch(\"/{user_id}\", response_model=UserRead , name=\"Admin Update User\")\r\nasync def update_user_admin(\r\n    user_id: UUID,\r\n    user_update: UserUpdate,\r\n    session: AsyncSession = Depends(get_session),\r\n    current_user: User = Depends(require_admin_or_senior_editor),\r\n):\r\n    target_user = await get_user_by_id(session, user_id)\r\n    validate_user_update_permissions(current_user, target_user)\r\n    return await update_user_by_id(session, user_id, user_update)\r\n\r\n@router.delete(\"/{user_id}\", status_code=status.HTTP_204_NO_CONTENT,name=\"Admin Delete User\")\r\nasync def delete_user(\r\n    user_id: UUID,\r\n    session: AsyncSession = Depends(get_session),\r\n    current_user: User = Depends(require_admin),\r\n):\r\n    prevent_self_action(current_user, user_id)\r\n    await delete_user_by_id(session, user_id)\r\n\r\n@router.post(\"/deactivate/{user_id}\", response_model=UserRead,name=\"Admin Deactivate User\")\r\nasync def deactivate_user(\r\n    user_id: UUID,\r\n    session: AsyncSession = Depends(get_session),\r\n    current_user: User = Depends(require_admin_or_senior_editor),\r\n):\r\n    # Prevent self-deactivation\r\n    prevent_self_action(current_user, user_id)\r\n    # Fetch user to deactivate\r\n    target_user = await get_user_by_id(session, user_id)\r\n    validate_user_deactivate_reactivate(current_user, target_user)\r\n    # Deactivate\r\n    return await deactivate_user_by_id(session, user_id)\r\n\r\n@router.post(\"/reactivate/{user_id}\", response_model=UserRead,name=\"Admin Reactivate User\")\r\nasync def reactivate_user(\r\n    user_id: UUID,\r\n    session: AsyncSession = Depends(get_session),\r\n    current_user: User = Depends(require_admin_or_senior_editor),\r\n):\r\n    # Prevent self-reactivate\r\n    prevent_self_action(current_user, user_id)\r\n    # Fetch user to reactivate\r\n    target_user = await get_user_by_id(session, user_id)\r\n    validate_user_deactivate_reactivate(current_user, target_user)\r\n    return await reactivate_user_by_id(session, user_id)\r\n\r\n@router.post(\"/first_admin\", response_model=UserRead, name=\"Create First Admin\")\r\nasync def create_first_admin(\r\n        user_create: UserCreate,\r\n        session: AsyncSession = Depends(get_session),\r\n):\r\n    return await create_user(session, user_create)\r\n\r\n\r\n@router.post(\"/create\", response_model=UserRead,name=\"Create User\")\r\nasync def add_user(\r\n        user_create: UserCreate,\r\n        session: AsyncSession = Depends(get_session),\r\n        current_user: User = Depends(require_admin_or_senior_editor_or_editor),\r\n):\r\n    validate_user_creation_permissions(current_user, user_create)\r\n    return await create_user(session, user_create , created_by_id=current_user.id)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/api/routes/users.py b/app/api/routes/users.py
--- a/app/api/routes/users.py	(revision ae1b084d8b5e5ce750c81d5355e63264956ecd05)
+++ b/app/api/routes/users.py	(date 1754318887824)
@@ -1,12 +1,15 @@
 # app/api/routes/users.py
-from fastapi import APIRouter, Depends, Query, status, UploadFile, File
+from fastapi import APIRouter, Depends, Query, status, UploadFile, File, HTTPException
 from typing import List, Optional
 from sqlalchemy.ext.asyncio import AsyncSession
 from uuid import UUID
+
+from sqlalchemy.orm import selectinload
+from sqlmodel import select
+
 from app.crud.user import create_user, delete_user_by_id, get_users, update_user_by_id, \
     deactivate_user_by_id, reactivate_user_by_id, get_user_by_id, update_own_user
 from app.models.user import User
-from app.schemas import user
 from app.schemas.user import UserRead, UserUpdate, UserCreate, UserUpdateOwn
 from app.core.dependencies import get_current_user, get_session
 from app.models.user_role import UserRole
@@ -24,6 +27,26 @@
 ):
     return current_user
 
+
+
+@router.get("/{user_id}", response_model=UserRead)
+async def get_user_by_id_route(
+    user_id: UUID,
+    session: AsyncSession = Depends(get_session),
+    current_user: User = Depends(get_current_user)
+):
+    result = await session.execute(
+        select(User).options(selectinload(User.created_by)).where(User.id == user_id)
+    )
+    user = result.scalar_one_or_none()
+
+    if not user:
+        raise HTTPException(status_code=404, detail="User not found")
+
+    # 👇 This is where you use it
+    user_data = UserRead.model_validate(user)
+    user_data.created_by_full_name = user.created_by.full_name if user.created_by else None
+    return user_data
 @router.patch("/me/update", response_model=UserRead,name="Update My Profile")
 async def update_own_profile(
     user_update: UserUpdateOwn,
@@ -42,7 +65,7 @@
     return {"filename": filename}
 
 
-@router.get("/all", response_model=List[UserRead],name="Admin/senior_editor List Users")
+@router.get("/all", response_model=List[UserRead],name="List Users")
 async def list_users(
     offset: int = Query(0, ge=0),
     limit: int = Query(10, ge=1, le=100),
Index: app/schemas/user.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from uuid import UUID\r\nfrom typing import Optional\r\nfrom datetime import datetime\r\nfrom pydantic import EmailStr, constr, field_validator\r\n\r\nfrom app.models.user import User\r\nfrom app.models.user_role import UserRole\r\nfrom sqlmodel import SQLModel\r\n\r\n\r\n# Shared base for all user-related schemas\r\nclass UserBase(SQLModel):\r\n    email: EmailStr\r\n    full_name: Optional[str] = None\r\n    role: UserRole = UserRole.senior_editor\r\n    is_active: bool = True\r\n\r\n\r\n# Used when creating a user (e.g. during registration or admin creation)\r\nclass UserCreate(UserBase):\r\n    password: constr(min_length=8)\r\n    # noinspection PyMethodFirstArgAssignment\r\n    @field_validator(\"email\")\r\n    def normalize_email(cls, v: str) -> str:\r\n        return v.lower().strip()  # Normalize email to lowercase and strip whitespace\r\n\r\n\r\n# Used when reading a user object (e.g. for GET responses)\r\nclass UserRead(UserBase):\r\n    id: UUID\r\n    created_at: datetime\r\n    updated_at: datetime\r\n    last_login: Optional[datetime] = None\r\n    user_pic: Optional[str]\r\n\r\n    class Config:\r\n        orm_mode = True\r\n\r\n# Used when updating an existing user\r\nclass UserUpdate(SQLModel):\r\n    email: Optional[EmailStr] = None\r\n    full_name: Optional[str] = None\r\n    role: Optional[UserRole] = None\r\n    is_active: Optional[bool] = None\r\n    password: Optional[constr(min_length=8)] = None  # \uD83D\uDC48 Length validation added\r\n\r\n    @field_validator(\"email\")\r\n    def normalize_email(cls, v: str) -> str:\r\n        return v.lower().strip() if v else v\r\n\r\nclass UserUpdateOwn(SQLModel):\r\n    email: Optional[EmailStr] = None\r\n    full_name: Optional[str] = None\r\n    password: Optional[constr(min_length=8)] = None  # \uD83D\uDC48 Length validation added\r\n\r\n    @field_validator(\"email\")\r\n    def normalize_email(cls, v: str) -> str:\r\n        return v.lower().strip() if v else v\r\n\r\n# Used internally for authentication (login input)\r\nclass UserLogin(SQLModel):\r\n    email: EmailStr\r\n    password: str\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/schemas/user.py b/app/schemas/user.py
--- a/app/schemas/user.py	(revision ae1b084d8b5e5ce750c81d5355e63264956ecd05)
+++ b/app/schemas/user.py	(date 1754319478321)
@@ -2,8 +2,6 @@
 from typing import Optional
 from datetime import datetime
 from pydantic import EmailStr, constr, field_validator
-
-from app.models.user import User
 from app.models.user_role import UserRole
 from sqlmodel import SQLModel
 
@@ -32,9 +30,11 @@
     updated_at: datetime
     last_login: Optional[datetime] = None
     user_pic: Optional[str]
+    created_by_full_name: Optional[str] = None  # manually added field, not from DB
 
     class Config:
-        orm_mode = True
+        from_attributes = True
+
 
 # Used when updating an existing user
 class UserUpdate(SQLModel):
